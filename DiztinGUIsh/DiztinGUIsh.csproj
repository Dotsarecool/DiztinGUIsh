<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net5.0-windows</TargetFramework>
    <UseWindowsForms>true</UseWindowsForms>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>

    <RootNamespace>DiztinGUIsh</RootNamespace>
    <AssemblyName>DiztinGUIsh</AssemblyName>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="..\Diz.Core\Diz.Core.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="ByteSize">
      <Version>2.0.0</Version>
    </PackageReference>
    <PackageReference Include="FastBitmapLib">
      <Version>2.0.0</Version>
    </PackageReference>
    <PackageReference Include="GitInfo">
      <Version>2.1.2</Version>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="IX.Observable">
      <Version>0.7.3</Version>
    </PackageReference>
    <PackageReference Include="IX.StandardExtensions">
      <Version>0.7.4</Version>
    </PackageReference>
    <PackageReference Include="JetBrains.Annotations">
      <Version>2020.3.0</Version>
    </PackageReference>
    <PackageReference Include="LightInject">
      <Version>6.4.0</Version>
    </PackageReference>
    <PackageReference Include="SharpZipLib">
      <Version>1.3.1</Version>
    </PackageReference>
    <PackageReference Include="System.Buffers">
      <Version>4.5.1</Version>
    </PackageReference>
    <PackageReference Include="System.Collections.Immutable">
      <Version>5.0.0</Version>
    </PackageReference>
    <PackageReference Include="System.Interactive">
      <Version>5.0.0</Version>
    </PackageReference>
    <PackageReference Include="System.Memory">
      <Version>4.5.4</Version>
    </PackageReference>
    <PackageReference Include="System.Numerics.Vectors">
      <Version>4.5.0</Version>
    </PackageReference>
    <PackageReference Include="System.Runtime.CompilerServices.Unsafe">
      <Version>5.0.0</Version>
    </PackageReference>
    <PackageReference Include="System.ValueTuple">
      <Version>4.5.0</Version>
    </PackageReference>
    <PackageReference Include="xunit.analyzers">
      <Version>0.10.0</Version>
    </PackageReference>
  </ItemGroup>


  <ItemGroup>
    <Compile Update="window\dialog\BSNESTraceLogBinaryMonitorForm.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\dialog\BSNESTraceLogBinaryMonitorForm.Designer.cs">
      <DependentUpon>BSNESTraceLogBinaryMonitorForm.cs</DependentUpon>
    </Compile>
    <Compile Update="window\dialog\BSNESTraceLogBinaryMonitorForm.UI.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\dialog\About.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\dialog\About.Designer.cs">
      <DependentUpon>About.cs</DependentUpon>
    </Compile>
    <Compile Update="window\dialog\ProgressDialog.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\dialog\ProgressDialog.Designer.cs">
      <DependentUpon>ProgressDialog.cs</DependentUpon>
    </Compile>
    <Compile Update="window\dialog\ExportDisassembly.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\dialog\ExportDisassembly.Designer.cs">
      <DependentUpon>ExportDisassembly.cs</DependentUpon>
    </Compile>
    <Compile Update="window\dialog\GotoDialog.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\dialog\GotoDialog.Designer.cs">
      <DependentUpon>GotoDialog.cs</DependentUpon>
    </Compile>
    <Compile Update="window\dialog\HarshAutoStep.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\dialog\HarshAutoStep.Designer.cs">
      <DependentUpon>HarshAutoStep.cs</DependentUpon>
    </Compile>
    <Compile Update="window\dialog\ImportROMDialog.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\dialog\ImportROMDialog.Designer.cs">
      <DependentUpon>ImportROMDialog.cs</DependentUpon>
    </Compile>
    <Compile Update="window\dialog\InOutPointChecker.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\dialog\InOutPointChecker.Designer.cs">
      <DependentUpon>InOutPointChecker.cs</DependentUpon>
    </Compile>
    <Compile Update="window\AliasList.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\AliasList.Designer.cs">
      <DependentUpon>AliasList.cs</DependentUpon>
    </Compile>
    <Compile Update="window\MainWindow.Actions.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\MainWindow.Importers.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\MainWindow.MainTable.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\MainWindow.Properties.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\MainWindow.ReadOnlyHelpers.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\MainWindow.SimpleUI.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\MainWindow.Prompts.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\MainWindow.StateUpdate.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\usercontrols\visualizer\legend\BankLegend.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Update="window\usercontrols\visualizer\legend\BankLegend.Designer.cs">
      <DependentUpon>BankLegend.cs</DependentUpon>
    </Compile>
    <Compile Update="window\usercontrols\visualizer\legend\BankLegendItem.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Update="window\usercontrols\visualizer\legend\BankLegendItem.Designer.cs">
      <DependentUpon>BankLegendItem.cs</DependentUpon>
    </Compile>
    <Compile Update="window\usercontrols\visualizer\graphics\RomBankVisualizer.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Update="window\usercontrols\visualizer\graphics\RomBankVisualizer.Designer.cs">
      <DependentUpon>RomBankVisualizer.cs</DependentUpon>
    </Compile>
    <Compile Update="window\usercontrols\visualizer\graphics\RomFullVisualizer.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Update="window\usercontrols\visualizer\graphics\RomFullVisualizer.Designer.cs">
      <DependentUpon>RomFullVisualizer.cs</DependentUpon>
    </Compile>
    <Compile Update="window\usercontrols\visualizer\graphics\RomImage.cs">
      <SubType>UserControl</SubType>
    </Compile>
    <Compile Update="window\usercontrols\visualizer\graphics\RomImage.Designer.cs">
      <DependentUpon>RomImage.cs</DependentUpon>
    </Compile>
    <Compile Update="window\VisualizerForm.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\VisualizerForm.Designer.cs">
      <DependentUpon>VisualizerForm.cs</DependentUpon>
    </Compile>
    <Compile Update="window\MainWindow.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\MainWindow.Designer.cs">
      <DependentUpon>MainWindow.cs</DependentUpon>
    </Compile>
    <Compile Update="window\dialog\MarkManyDialog.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\dialog\MarkManyDialog.Designer.cs">
      <DependentUpon>MarkManyDialog.cs</DependentUpon>
    </Compile>
    <Compile Update="window\dialog\MisalignmentChecker.cs">
      <SubType>Form</SubType>
    </Compile>
    <Compile Update="window\dialog\MisalignmentChecker.Designer.cs">
      <DependentUpon>MisalignmentChecker.cs</DependentUpon>
    </Compile>
    <EmbeddedResource Update="window\AliasList.resx">
      <DependentUpon>AliasList.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\dialog\About.resx">
      <DependentUpon>About.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\dialog\BSNESTraceLogBinaryMonitorForm.resx">
      <DependentUpon>BSNESTraceLogBinaryMonitorForm.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\dialog\ProgressDialog.resx">
      <DependentUpon>ProgressDialog.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\dialog\ExportDisassembly.resx">
      <DependentUpon>ExportDisassembly.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\dialog\GotoDialog.resx">
      <DependentUpon>GotoDialog.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\dialog\HarshAutoStep.resx">
      <DependentUpon>HarshAutoStep.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\dialog\ImportROMDialog.resx">
      <DependentUpon>ImportROMDialog.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\dialog\InOutPointChecker.resx">
      <DependentUpon>InOutPointChecker.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\usercontrols\visualizer\legend\BankLegend.resx">
      <DependentUpon>BankLegend.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\usercontrols\visualizer\legend\BankLegendItem.resx">
      <DependentUpon>BankLegendItem.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\usercontrols\visualizer\graphics\RomBankVisualizer.resx">
      <DependentUpon>RomBankVisualizer.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\usercontrols\visualizer\graphics\RomFullVisualizer.resx">
      <DependentUpon>RomFullVisualizer.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\usercontrols\visualizer\graphics\RomImage.resx">
      <DependentUpon>RomImage.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\VisualizerForm.resx">
      <DependentUpon>VisualizerForm.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\MainWindow.resx">
      <DependentUpon>MainWindow.cs</DependentUpon>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <EmbeddedResource Update="window\dialog\MarkManyDialog.resx">
      <DependentUpon>MarkManyDialog.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="window\dialog\MisalignmentChecker.resx">
      <DependentUpon>MisalignmentChecker.cs</DependentUpon>
    </EmbeddedResource>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <Compile Update="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Update="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
    <None Include="build\FinalizeBuildDirectory.targets" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="dist\" />
    <Folder Include="Properties\DataSources\" />
  </ItemGroup>

  <!--custom build targets for packing up final distribution of files-->

  <!-- 
DiztinGUIsh

The point of this file is, for release builds, to re-arrange the file structure of bin/Release/ to be ready for 
end-user distribution. That mostly means moving the big mess of DLLs into a lib/ file, and copying around some docs
and support files.

We could have done this more easily with a .bat file or similar, but, I wanted the configuration to be testable in 
visual studio so we can diagnose issues that result from this file structure more easily. 

vague gist of this is here:
https://docs.microsoft.com/en-us/visualstudio/msbuild/how-to-extend-the-visual-studio-build-process?view=vs-2019 
-->

  
    <PropertyGroup>
      <FinalReleaseLibDir>$(OutDir)lib\</FinalReleaseLibDir>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
      <BuildDependsOn>
        $(BuildDependsOn);
        CreateFinalDistributionDirectory;
        RemoveEmptyDirs;
      </BuildDependsOn>
      <CleanDependsOn>
        $(CleanDependsOn);
        CustomClean;
      </CleanDependsOn>
    </PropertyGroup>

    <!-- only add static files here, if anything is auto-generating, don't put it here -->
    <ItemGroup>
      <FinalReleaseSupportFiles Include="dist\**\*.*" />
      <FinalReleaseSupportFiles Include="..\README.md" />
      <FinalReleaseSupportFiles Include="..\LICENSE.md" />
    </ItemGroup>

    <!-- 
    for final release, move some files around to make the distribution distro look nicer
    I wanted to do this here (instead of in external CI) so this configuration could be tested and debugged 
    -->
    <Target Name="CreateFinalDistributionDirectory">
      <ItemGroup>
        <!-- add autogenerated files here -->
        <FinalReleaseLibFiles Include="$(OutDir)**\*.dll" />
        <FinalReleaseLibFiles Include="$(OutDir)**\*.xml" />
        <FinalReleaseLibFiles Include="$(OutDir)**\*.pdb" />
        <FinalReleaseLibFiles Include="$(OutDir)**\*.config" />

        <FinalReleaseLibFiles Remove="$(FinalReleaseLibDir)\**\*.*" />
        <FinalReleaseLibFiles Remove="$(OutDir)$(ProjectName)*" />
        <FinalReleaseLibFiles Remove="$(OutDir)$(ProjectName).exe" />
      </ItemGroup>

      <Error Condition="'$(OutDir)' == ''" Text="OutDir variable not set, can't continue." />

      <Move SourceFiles="%(FinalReleaseLibFiles.Identity)"
            DestinationFolder="$(FinalReleaseLibDir)%(FinalReleaseLibFiles.RecursiveDir)" />
      <Copy SourceFiles="%(FinalReleaseSupportFiles.Identity)"
            DestinationFolder="$(OutDir)%(FinalReleaseSupportFiles.RecursiveDir)"
            SkipUnchangedFiles="true" />
    </Target>

    <Target Name="RemoveEmptyDirs">
      <ItemGroup>
        <Directories
          Include="$([System.IO.Directory]::GetDirectories('$(OutDir)', '*', System.IO.SearchOption.AllDirectories))" />
        <Directories>
          <Files>$([System.IO.Directory]::GetFiles("%(Directories.Identity)", "*", System.IO.SearchOption.AllDirectories).get_Length())</Files>
        </Directories>
      </ItemGroup>
      <RemoveDir Directories="@(Directories)" Condition="%(Files)=='0'" />
    </Target>

    <Target Name="CustomClean">
      <Error Condition="'$(OutDir)' == ''" Text="OutDir variable not set, can't continue." />
      <ItemGroup>
        <_CustomFilesToDelete Include="$(FinalReleaseLibDir)**\*" />
        <_CustomFilesToDelete
          Include="$(OutDir)%(FinalReleaseSupportFiles.RecursiveDir)%(FinalReleaseSupportFiles.Filename)%(FinalReleaseSupportFiles.Extension)" />
      </ItemGroup>
      <Delete Files='@(_CustomFilesToDelete)' />

      <!-- TODO: figure out how to refactor this, it's the same code as above.
             reason is: If you do a REBUILD, RemoveEmptyDirs will only get called once (for the early clean) and not at the end a second time -->
      <ItemGroup>
        <Directories
          Include="$([System.IO.Directory]::GetDirectories('$(OutDir)', '*', System.IO.SearchOption.AllDirectories))" />
        <Directories>
          <Files>$([System.IO.Directory]::GetFiles("%(Directories.Identity)", "*", System.IO.SearchOption.AllDirectories).get_Length())</Files>
        </Directories>
      </ItemGroup>
      <RemoveDir Directories="@(Directories)" Condition="%(Files)=='0'" />
      <!-- end same code -->

    </Target>
</Project>